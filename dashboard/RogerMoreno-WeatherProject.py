# -*- coding: utf-8 -*-
"""WeatherProjectAnalysis-RogerMoreno.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ss4BYF31NRGOVpklPR_J6ANsNHwhiAel
"""



import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

link = "https://drive.google.com/uc?id=1BfNq2kYOEqwY9U0t_9Fjc7LuL9xv9gjB"
df = pd.read_csv(link)

st.set_page_config(layout="wide")

def compute_correlations(group):
    correlations = pd.Series({
        'PM2.5_PM10_corr': group['PM2.5'].corr(group['PM10']),
        'PM2.5_CO_corr': group['PM2.5'].corr(group['CO']),
        'PM10_CO_corr': group['PM10'].corr(group['CO']),
        'CO_NO2_corr': group['CO'].corr(group['NO2']),
        'PM2.5_O3_corr': group['PM2.5'].corr(group['O3']),
        'PM10_O2_corr': group['PM10'].corr(group['O3']),
        'CO_O2_corr': group['CO'].corr(group['O3']),
        'NO2_O2_corr': group['NO2'].corr(group['O3'])
    })
    return correlations



home, a1, a2 = st.tabs(["Home", "Analyze 1", "Analyze 2"])

with home:
    st.title("Weather Project Analysis")
    st.subheader("by Roger Moreno")
    st.markdown("### Welcome at Weather Analyze Dashboard")

with a1 :

    pollutants = ['PM2.5', 'PM10', 'SO2', 'NO2', 'CO', 'O3']
    grouped_df = df.groupby(['year', 'station'])[pollutants].mean().reset_index()
    correlations = df.groupby('year').apply(compute_correlations)
    grouped_data = df.groupby('year')[pollutants].mean()

    st.title("Dampak Polutan Udara terhadap Variasi Konsentrasi Ozon Tahunan")

    col1, col2 = st.columns(2)

    with col1:

        st.markdown("### Pollutant Trends by Station")
        pollutant = st.selectbox("Select Pollutant", pollutants, key="pollutant_code2")
        fig, ax = plt.subplots(figsize=(18, 10))
        sns.lineplot(data=grouped_df, x='year', y=pollutant, hue='station', ax=ax)
        ax.set_title(f"{pollutant} Trends by Station", fontsize=14)
        ax.set_xlabel("Year", fontsize=12)
        ax.set_ylabel(pollutant, fontsize=12)
        ax.legend(loc='upper left', bbox_to_anchor=(1.05, 1), fontsize=10)
        st.pyplot(fig)

    with col2:
        st.markdown("### Pollutant Trends by Year and Station")
        station = st.selectbox("Select Station", grouped_df['station'].unique(), key="station_code3")
        station_data = grouped_df[grouped_df['station'] == station]
        fig, axes = plt.subplots(2, 1, figsize=(12, 10), gridspec_kw={'height_ratios': [1, 2]})
        sns.lineplot(ax=axes[0], data=station_data, x='year', y='CO', label='CO', color='purple')
        axes[0].set_title(f'CO Trends in {station}')
        axes[0].set_xlabel('Year')
        axes[0].set_ylabel('CO Levels')
        axes[0].grid(True)
        for pollutant in pollutants:
            if pollutant != 'CO':
                sns.lineplot(ax=axes[1], data=station_data, x='year', y=pollutant, label=pollutant)
        axes[1].set_title(f'Pollutants Trends (Excluding CO) in {station}')
        axes[1].set_xlabel('Year')
        axes[1].set_ylabel('Pollutant Levels')
        axes[1].grid(True)
        handles, labels = axes[1].get_legend_handles_labels()
        fig.legend(handles, labels, loc='upper center', ncol=len(pollutants), fontsize='small')
        plt.tight_layout(rect=[0, 0, 1, 0.95])
        st.pyplot(fig)

    expander = st.expander("### Penjelasan")
    expander.write('''
      Berdasarkan data yang dipaparkan, maka dapat disimpulkan bahwa seluruh polutan(PM2.5,PM10, CO, NO2)
      memiliki pengaruh negatif terhadap O3 atau ozon walaupun secara tidak signifikan
    ''')

    colx, coly, colz = st.columns(3)

    with colx:
      st.markdown("### Trends of Pollutants Over the Years in All Stations")
      fig, ax = plt.subplots(figsize=(12, 8))
      for pollutant in pollutants:
          ax.plot(grouped_data.index, grouped_data[pollutant], marker='o', label=pollutant)
      ax.set_title("Trends of Pollutants Over the Years", fontsize=16)
      ax.set_xlabel("Year", fontsize=14)
      ax.set_ylabel("Concentration", fontsize=14)
      ax.legend(title="Pollutants", fontsize=12)
      ax.grid(True, linestyle='--', alpha=0.7)
      st.pyplot(fig)

    with coly:
      st.markdown("### Pollutant Levels by Year and Station")
      fig, axes = plt.subplots(2, 3, figsize=(18, 10), sharey=False)
      for i, pollutant in enumerate(pollutants):
          row, col = divmod(i, 3)
          ax = axes[row, col]
          sns.barplot(data=grouped_df, x='year', y=pollutant, hue='station', ax=ax)
          ax.set_title(f'{pollutant} Levels by Year and Station', fontsize=14)
          ax.set_xlabel('Year', fontsize=12)
          ax.set_ylabel(f'{pollutant} Levels', fontsize=12)
          ax.legend(title='Station', fontsize=10, loc='upper right')
          ax.grid(axis='y', linestyle='--', alpha=0.7)
          if pollutant == 'CO':
              ax.set_ylim(0, 1400)
          elif pollutant == 'SO2':
              ax.set_ylim(0, 30)
          elif pollutant == 'NO2' or pollutant == 'O3':
              ax.set_ylim(0, 80)
          else:
              ax.set_ylim(0, 150)
      st.pyplot(fig)

    with colz:
      st.markdown("### Heatmap of Correlations by Year")
      fig, ax = plt.subplots(figsize=(10, 6))
      sns.heatmap(correlations, annot=True, cmap='coolwarm', fmt=".2f", linewidths=0.5, ax=ax)
      ax.set_title("Heatmap of Correlations by Year")
      st.pyplot(fig)

with a2 :

    pollutants = ['PM2.5', 'PM10', 'CO', 'NO2', 'SO2', 'TEMP', 'PRES', 'DEWP', 'WSPM']
    filtered_df = df[(df['PM2.5'] > 150.5) & (df['PM10'] > 200)]
    grouped_filtered_df = filtered_df.groupby(['month', 'station'])[['PM2.5', 'PM10', 'CO', 'NO2', 'SO2', 'TEMP', 'PRES', 'DEWP', 'WSPM']].mean()
    grouped_filtered_df.reset_index(inplace=True)

    st.title("Karakteristik Bulan dengan Konsentrasi PM2.5 dan PM10 yang Masuk dalam Kategori Berbahaya")

    cold, cole = st.columns(2)

    with cold :
        st.markdown("### Trends for PM2.5 and PM10 by Station")

        selected_station = st.selectbox("Select Station", grouped_filtered_df['station'].unique())

        station_data = grouped_filtered_df[grouped_filtered_df['station'] == selected_station]

        fig, ax = plt.subplots(figsize=(10, 6))
        sns.lineplot(data=station_data, x='month', y='PM2.5', label='PM2.5', marker='o', ax=ax)
        sns.lineplot(data=station_data, x='month', y='PM10', label='PM10', marker='o', ax=ax)
        ax.set_title(f'PM2.5 and PM10 High Value Trends for {selected_station}', fontsize=14)
        ax.set_xlabel('Month', fontsize=12)
        ax.set_ylabel('Average Levels', fontsize=12)
        ax.legend()
        ax.grid(True)
        st.pyplot(fig)

    with cole :

        st.markdown("### Levels of PM10 and PM2.5 by Month")

        month_mapping = {
            1: "January", 2: "February", 3: "March", 4: "April",
            5: "May", 6: "June", 7: "July", 8: "August",
            9: "September", 10: "October", 11: "November", 12: "December"
        }

        grouped_filtered_df['month_name'] = grouped_filtered_df['month'].map(month_mapping)

        selected_month_name = st.selectbox("Select Month", grouped_filtered_df['month_name'].unique())

        selected_month = [k for k, v in month_mapping.items() if v == selected_month_name][0]
        month_data = grouped_filtered_df[grouped_filtered_df['month'] == selected_month]

        fig, ax = plt.subplots(figsize=(10, 6))
        pivot_data = month_data.pivot(index='station', columns='month', values=['PM2.5', 'PM10'])
        pivot_data.plot(kind='bar', ax=ax, legend=True)
        ax.set_title(f'PM2.5 and PM10 Levels for {selected_month_name}', fontsize=14)
        ax.set_ylabel('Average Levels', fontsize=12)
        ax.set_xlabel('Station', fontsize=12)
        ax.grid(True)
        st.pyplot(fig)

    colf, colg,colh = st.columns(3)

    with colf:
          st.markdown("### Trends Atmosfer When PM2.5 and PM10 are High")
          fig, ax = plt.subplots(figsize=(8, 5))
          sns.lineplot(data=grouped_filtered_df, x='month', y='TEMP', marker='o', label='TEMP', ax=ax)
          sns.lineplot(data=grouped_filtered_df, x='month', y='PRES', marker='o', label='PRES', ax=ax)
          sns.lineplot(data=grouped_filtered_df, x='month', y='DEWP', marker='o', label='DEWP', ax=ax)
          sns.lineplot(data=grouped_filtered_df, x='month', y='WSPM', marker='o', label='WSPM', ax=ax)
          ax.set_title("Environmental Variables Trends")
          ax.set_ylabel("Levels")
          ax.set_xlabel("Month")
          st.pyplot(fig)

    with colg:
          expander = st.expander("### Penjelasan")
          expander.write('''
            Berdasarkan data yang dipaparkan, maka dapat disimpulkan bahwa karakteristik polutan dan atmosfer memiliki
            korelasi yang earah namun tidak signifikan dimana peningkatan pM2.5 dan pm10 memiliki pengaruh yang berbeda pada setiap
            variabel polutan dan atsmosfer.
          ''')


    with colh:
          st.markdown("### Trends Pollutants When PM2.5 and PM10 are High")
          fig, ax = plt.subplots(figsize=(8, 5))
          for pollutant in ['PM2.5', 'PM10', 'CO', 'NO2', 'SO2']:
              sns.lineplot(data=grouped_filtered_df, x='month', y=pollutant, marker='o', label=pollutant, ax=ax)
          ax.set_title("Trends of Pollutants Over Time")
          ax.set_ylabel("Average Levels")
          ax.set_xlabel("Month")
          st.pyplot(fig)


    colk, coll, colm = st.columns(3)

    with colk:
          st.markdown("#### CO Trend")
          fig, ax = plt.subplots(figsize=(8, 5))
          sns.lineplot(data=grouped_filtered_df, x='month', y='CO', marker='o', label='CO', ax=ax)
          ax.set_title("Monthly CO Levels")
          ax.set_ylabel("CO Levels")
          ax.set_xlabel("Month")
          st.pyplot(fig)

    with coll:
          st.markdown("#### NO2 Trend")
          fig, ax = plt.subplots(figsize=(8, 5))
          sns.lineplot(data=grouped_filtered_df, x='month', y='NO2', marker='o', label='NO2', ax=ax)
          ax.set_title("Monthly NO2 Levels")
          ax.set_ylabel("NO2 Levels")
          ax.set_xlabel("Month")
          st.pyplot(fig)

    with colm:
          st.markdown("#### SO2 Trend")
          fig, ax = plt.subplots(figsize=(8, 5))
          sns.lineplot(data=grouped_filtered_df, x='month', y='SO2', marker='o', label='SO2', ax=ax)
          ax.set_title("Monthly SO2 Levels")
          ax.set_ylabel("SO2 Levels")
          ax.set_xlabel("Month")
          st.pyplot(fig)